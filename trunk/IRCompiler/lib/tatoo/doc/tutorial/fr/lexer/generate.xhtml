<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../../../tatoo.css" rel="stylesheet"/>
  <title>L'implantation des automates</title>
 </head>
 <body>
  <h1>L'implantation des automates</h1>
  <h2>La table des automates</h2>
  <p>La compilation du fichier <tt>.xlex</tt> avec Tatoo produit une classe 
  de nom <tt>LexerDataTable</tt> et une interface de nom <tt>RuleEnum</tt>.</p>
  <p>La méthode statique <tt>createTable()</tt> de la classe <tt>LexerDataTable</tt> retourne 
   une table qui associe à chaque règle les implantations des automates correspondant aux expressions rationnelles
   qui la décrive, ainsi que diverses autres informations. Chaque règle est repérée par une valeur de l'énumération
   <tt>RuleEnum</tt> égale à la valeur de l'attribut <tt>id</tt> lui correspondant dans le fichier <tt>.xlex</tt>.</p>
   <pre><![CDATA[LexerTable<RuleEnum> table = LexerDataTable.createTable();]]></pre>
   <p>Plus précisément, la table est de type 
   <tt><a href="../../../api/fr/umlv/tatoo/runtime/lexer/LexerTable.html"><![CDATA[LexerTable<RuleEnum>]]></a></tt>. Sa
   méthode <tt><a href="../../../api/fr/umlv/tatoo/runtime/lexer/LexerTable.html#getRuleData(R)">getRuleData()</a></tt>
   prend en argument une valeur de
   l'énumération <tt>RuleEnum</tt> et retourne un objet de la classe 
   <tt><a href="../../../api/fr/umlv/tatoo/runtime/lexer/rules/RuleData.html">RuleData</a></tt>.
   Cet objet contient les informations suivantes&nbsp;:</p>
  <ul>
   <li><tt><a href="../../../api/fr/umlv/tatoo/runtime/lexer/rules/RuleData.html#getMainRegex()">getMainRegex()</a></tt>
    retourne l'automate correspondant à l'expression rationnelle principale&nbsp;;</li>
   <li><tt><a href="../../../api/fr/umlv/tatoo/runtime/lexer/rules/RuleData.html#getFollowRegex()">getFollowRegex()</a></tt>
    retourne l'automate correspondant à la contrainte sur ce qui suit l'expression rationnelle principale&nbsp;;</li>
   <li><tt><a href="../../../api/fr/umlv/tatoo/runtime/lexer/rules/RuleData.html#beginningOfLineRequired()">beginningOfLineRequired()</a></tt>
   	indique si l'expression rationnelle principale doit se trouver en début de ligne.</li>
  </ul>
  <p>Vous ne devriez pas avoir besoin d'utiliser directement ces dernières méthodes.</p>
  <h2>Utilisation de la table des automates</h2>  
    <p>La table des automates utilise et est utilisée, à l'exécution, par des classes de
   Tatoo 
   (<tt><a href="../../../api/fr/umlv/tatoo/runtime/lexer/rules/RuleData.html">RuleData</a></tt> en particulier).
   Il faut donc ajouter le fichier <tt><a href="../../../../files/tatoo-runtime.jar">tatoo-runtime.jar</a></tt> au
   <i>classpath</i> au moment de la compilation et de l'exécution de tout programme l'utilisant.</p>
  <table class="two-col">
   <tr>
    <td class="half">
     <pre>javac -classpath tatoo-runtime.jar MonProgramme.java   
</pre>
    </td>
    <td class="half">
     <pre>java -cp tatoo-runtime.jar MonProgramme   
</pre>
    </td>
   </tr>
  </table>
  <p><a href = "javascript:history.back()">Back</a></p>
 </body>
</html>
