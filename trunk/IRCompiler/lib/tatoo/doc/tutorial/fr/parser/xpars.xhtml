<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="../../../../tatoo.css" rel="stylesheet"/>
   <script type="text/javascript" src="../../../../tatoo.js"/>
  <title>Écrire un fichier .xpars</title>
 </head>
 <body>
  <h1>Écrire le fichier <tt>.xpars</tt></h1>
  <p> La grammaire de l'analyseur syntaxique est décrite dans un fichier XML,
   <tt>.xpars</tt>, dont la syntaxe est précisée par la DTD, <a
    href="http://tatoo.univ-mlv.fr/dtd/1.1/parser.dtd">parser.dtd</a>.</p>
  <p>La grammaire est décrite dans un élément <tt><![CDATA[<parser>...</parser>]]></tt>.
   Cet élément contient une description des terminaux, des productions, des non-terminaux racines, du
   terminal erreur, des priorités et des versions. </p>
  <h2 id="xpars-terminal">Les terminaux</h2>
  <p>Les terminaux de la grammaire sont définis avec l'élément
   <tt><![CDATA[<terminal/>]]></tt>. Le nom du terminal est précisé au moyen de
   l'attribut <tt>id</tt>. Il est aussi possible de préciser un attribut
   <tt>priority</tt> associés au terminal. Sa valeur est l'identificateur d'un
   élément <tt>priority</tt> décrit plus <a href="#priority">loin</a>. </p>
  <p>Par exemple&nbsp;:</p> 
  <pre><![CDATA[<terminal id="plus" priority="low"/>]]>
</pre>
  <h2>Les productions</h2>
  <p>Les productions sont décrites avec des éléments
   <tt><![CDATA[<production>...</production>]]></tt>. L'attribut <tt>id</tt>
   précise le nom de chaque production. Il est également possible de préciser un attribut
   <tt>priority</tt> dont la valeur est l'identificateur d'un élément <tt><a href="#priority">priority</a></tt>
   et un attribut <tt>version</tt> dont la valeur est l'identificateur d'un élément <tt><a href="#version">version</a></tt></p>
  <p>Un élément production doit contenir exactement un élément
   <tt><![CDATA[<lhs/>]]></tt> (<i>left hand side</i>) et un élément
   <tt><![CDATA[<rhs>...</rhs>]]></tt> (<i>right hand side</i>). L'élément
   <tt><![CDATA[<lhs/>]]></tt> précise au moyen de l'attribut <tt>id</tt> un nom de
   non-terminal en partie gauche de la production, alors que l'élément
   <tt><![CDATA[<rhs>...</rhs>]]></tt> précise les terminaux et non-terminaux (éventuellement aucun)
   en partie droite au moyen des élément suivants&nbsp;:</p>
   <ul>
   <li><tt><![CDATA[<right/>]]></tt> qui représente un terminal ou non-terminal dont l'identification
    est précisé au moyen de l'attribut <tt>id</tt>&nbsp;;</li>
    <li><tt><![CDATA[<list/>]]></tt> qui représente une liste de terminaux ou non-terminaux et dont 
     les attributs sont&nbsp;:
     <ul>
      <li><tt>id</tt> qui précise le nom de la liste&nbsp;;</li> 
      <li><tt>element</tt> qui précise l'identificateur du terminal ou non-terminal de la liste&nbsp;;</li>
      <li><tt>separator</tt> qui précise éventuellement l'identificateur d'un terminal séparateur 
       entre les éléments de la liste&nbsp;;</li>
      <li><tt>empty</tt> qui est un booléen qui indique si la liste peut être vide ou si elle doit contenir au
      moins un élément&nbsp;;</li>
      <li><tt>associativity</tt> qui précise si l'associativité de la liste se fait à droite (<tt>right</tt>) ou 
      à gauche (<tt>left</tt>), comme par défaut si rien n'est précisé.</li>
     </ul> </li>
   </ul>
  <p>Par exemple&nbsp;:</p>
  <pre><![CDATA[<production id="expr_fun_call">
 <lhs id="expr"/>  
 <rhs> 
  <right id="function"/>
  <right id="l_parent"/>
  <list id="args" element="expr" separator="comma" empty="true"/> 
  <right id="r_parent"/>
 </rhs>
</production>]]></pre>
  <h2>Les racines</h2>
  <p>L'élément <tt><![CDATA[<start/>]]></tt> permet de préciser les terminaux ou
   non-terminaux qui peuvent servir de racine dans la grammaire. Leurs noms sont précisés au
   moyen de l'attribut <tt>id</tt>. </p>
  <p>Par exemple&nbsp;:</p>
  <pre><![CDATA[<start id="expr"/>]]>
</pre>
  <h2>Le terminal erreur</h2>
  <p>Il est possible de préciser un terminal <tt><![CDATA[<error/>]]></tt> qui sera
   produit en cas d'erreur et qui permettra de préciser des productions de reprise sur erreur.
   Le nom de ce terminal est précisé au moyen de l'attribut <tt>id</tt>.</p>
  <p></p>
  <pre><![CDATA[<error id="error"/>]]>
</pre>
  <p>Les productions qui font apparaître le terminal décrit dans l'élément
   <tt><![CDATA[<error/>]]></tt> sont uniquement sélectionnées pour la reprise sur
   erreur.</p>
  
  <h2 id="priority">Les priorités</h2>
  <p>Il est possible de définir des priorités qui pourront être associées aux terminaux et aux productions
   de la grammaire. Ces priorités sont utilisées pour résoudre les conflits qui peuvent apparaître lors de
   la construction des tables de l'analyseur. La priorité sur un terminal précise la priorité du <i>shift</i> de ce
   terminal alors que la priorité sur une production précise la priorité du <i>reduce</i> de
   cette production. Par défaut, les terminaux de la grammaire n'ont pas de priorité. Les
   productions n'ont pas non plus de priorité, sauf si un terminal apparaissant en partie
   droite de la production a une priorité. Dans ce cas, la priorité de la production est celle du
   dernier terminal ayant une priorité apparaissant en partie droite de la production.
   </p>
  <p>
   L'attribut <tt>priority</tt> permet d'affecter une valeur à la priorité. 
   Cette valeur est de type <tt>double</tt>. </p>
  <p>L'attribut <tt>associativity</tt> permet d'affecter un type d'associativité à la priorité.
   Les valeurs possibles pour l'associativité sont
   <tt>left</tt>, <tt>right</tt>, <tt>non-associative</tt> et <tt>none</tt>. Si cet
   attribut n'est pas précisé, la valeur par défaut est <tt>none</tt>.</p>
  <p>Pour résoudre les conflits&nbsp;:</p>
  <ul>
   <li>si l'un des éléments du conflits n'a pas de priorité&nbsp;:
    <ul>
     <li>si c'est un conflit <i>reduce/reduce</i> une exception est levée&nbsp;;</li>
     <li>si c'est un conflit <i>shift/reduce</i> le <i>shift</i> est choisi avec un message 
      d'alerte&nbsp;;</li>
    </ul> </li>
   <li>si l'un des éléments du conflit a une priorité plus forte que l'autre, il est choisi
   &nbsp;;</li>
   <li>si les deux éléments du conflit ont la même priorité, l'associativité est utilisée, il
    faut dans ce cas (sinon une exception est levée) que les deux éléments aient la même
    associativité et que l'on soit dans le cas d'un conflit <i>shift/reduce</i>&nbsp;:
    <ul>
     <li>si l'associativité est <tt>left</tt>, le <i>reduce</i> est choisi&nbsp;;</li>
     <li>si l'associativité est <tt>right</tt>, le <i>shift</i> est choisi&nbsp;;</li>
     <li>si l'associativité est <tt>none</tt>, le <i>shift</i> est choisi avec une alerte
     &nbsp;;</li>
     <li>si l'associativité est <tt>non-associtive</tt>, il y aura une exception si l'on
      rencontre ce conflit à l'exécution.</li>
    </ul> </li>
  </ul>
  <h2 id="version">La gestion des versions</h2>
  <p>Il est possible de faire coexister dans un même fichier <tt>.xpars</tt> plusieurs versions d'un même
  langage. Pour cela, il est tout d'abord nécessaire de définir des identificateurs de versions au moyen
  de la balise <tt><![CDATA[<version>]]></tt> qui prend comme attribut l'identificateur <tt>id</tt> et un 
   ensemble d'autres versions que celle-ci implique au moyen de l'attribut <tt>implies</tt>.</p>
  <p>Par exemple&nbsp;:</p>
  <pre><![CDATA[<version id="V2" implies="V1"/>]]></pre>
  <p>Une fois l'ensemble des versions définies, il est possible de préciser pour chaque production une version
  au moyen de l'attribut <tt>version</tt>.</p>
  <p>Par exemple&nbsp;:</p>
  <pre><![CDATA[<production id="v2start" version="V2">]]></pre>
  <h2>Un exemple complet</h2>
  <p>L'exemple suivant (<a
    href="../../../../samples/tutorial/calc.xpars">calc.xpars</a>) donne la grammaire des expressions arithmétiques.</p>
  <pre id="calc.xpars"/>     
   <script type="text/javascript">
   myInclude("calc.xpars","../../../../samples/tutorial/calc.xpars");
   </script>
  <p><a href = "javascript:history.back()">Back</a></p>
 </body>
</html>
