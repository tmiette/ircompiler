package ${terminalEvaluator.packageName};

#foreach($import in $terminalImports)
import $import.rawName;
#end

/** 
 *  @param <D> data type passed by the lexer listener.
 *
 *  This class is generated - please do not edit it 
 */
public interface ${terminalEvaluator.simpleName}<D> {
#foreach($rule in $rules)
#set ($info=$ruleInfoMap.get($rule))
#if ($info.isSpawnable())
#set($t=false)#set ($t = $ruleTypeMap.get($rule))
#if ($t)
  /** This method is called when the rule <code>${rule.id}</code> is recognized by the lexer.
   *  @param data the data sent by the lexer, in general, the
   *         {@link fr.umlv.tatoo.runtime.buffer.TokenBuffer#view a view of the token buffer} or the buffer itself.
#if (!$t.isVoid())   
   *  @return the value associated with the terminal spawn for the rule.
#end
 */
  public ${t.simpleName} ${rule.id}(D data);
#end
#end
#end
}
